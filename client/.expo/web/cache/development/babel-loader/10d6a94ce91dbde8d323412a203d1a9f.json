{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/ManualOption.js\";\n\nimport React from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SearchBar from \"../components/SearchBar\";\nimport { COLORS } from \"../libs/constants\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\nimport { addSingleIngredient } from \"../libs/redux/actions/NewIngredientsActions\";\n\nvar ManualOption = function ManualOption(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      clearSearchBar = _React$useState2[0],\n      setClearSearchBar = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      chooseQuantity = _React$useState4[0],\n      setChooseQuantity = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    ingredient: {},\n    quantity: {\n      amount: 0,\n      unit: \"\"\n    }\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      singleIngredientChosen = _React$useState6[0],\n      setSingleIngredientChosen = _React$useState6[1];\n\n  var ingredientsResults = useSelector(function (state) {\n    return state.ingredientsSearch.ingredients;\n  });\n  var newIngredients = useSelector(function (state) {\n    return state.newIngredients.newIngredients;\n  });\n  var selectedIngredients = useSelector(function (state) {\n    return state.newIngredients.selectedIngredients;\n  });\n  var styles = StyleSheet.create({\n    mainContainer: {\n      flex: 1,\n      marginTop: 40,\n      marginRight: 10,\n      marginLeft: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    mainTitle: {\n      fontSize: 25,\n      width: \"80%\",\n      fontWeight: \"800\",\n      textAlign: \"center\"\n    },\n    resultFlatList: {\n      backgroundColor: COLORS.white,\n      borderRadius: 7,\n      marginLeft: 6,\n      marginRight: 6,\n      marginTop: 10,\n      marginBottom: 10\n    },\n    ingredientContainer: {\n      flex: 1,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      margin: 10,\n      marginLeft: 20,\n      height: 80,\n      padding: 5,\n      backgroundColor: COLORS.white\n    },\n    ingredientContainerActive: {\n      flex: 1,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      margin: 10,\n      marginLeft: 20,\n      height: 80,\n      backgroundColor: COLORS.lightCoral,\n      padding: 5\n    },\n    ingredientImage: {\n      height: 40,\n      width: 40,\n      borderRadius: 7\n    },\n    ingredientLabel: {\n      marginLeft: 10,\n      fontSize: 20,\n      flexWrap: \"wrap\"\n    },\n    modalTitle: {\n      fontSize: 20,\n      fontWeight: \"800\",\n      marginTop: 30,\n      marginBottom: 20\n    },\n    ingredientsList: {\n      flex: 1\n    },\n    footer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      height: 70\n    },\n    cancelButton: {\n      flex: 2,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\"\n    },\n    confirmButton: {\n      flex: 2,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\"\n    },\n    buttonText: {\n      color: COLORS.white,\n      fontSize: 20\n    },\n    quantityContainer: {\n      flex: 1,\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: COLORS.white,\n      display: chooseQuantity ? \"flex\" : \"none\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    quantitySubtitle: {\n      fontSize: 25,\n      marginBottom: 10\n    },\n    quantityInputContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginBottom: 30,\n      width: \"100%\",\n      justifyContent: \"space-evenly\"\n    },\n    quantityInput: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.lightCoral,\n      width: 50\n    },\n    quantityNavigationBack: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\"\n    },\n    quantityNavigationConfirm: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\"\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.mainTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Add an ingredient\"), React.createElement(SearchBar, {\n    searchType: \"ingredientsAPI\",\n    onChangeProp: fetchIngredientsSearchApi,\n    clear: clearSearchBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), ingredientsResults ? ingredientsResults.length !== 0 ? React.createElement(FlatList, {\n    data: ingredientsResults,\n    style: styles.resultFlatList,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(Pressable, {\n        key: index,\n        style: newIngredients.some(function (el) {\n          return el.food.foodId === item.food.foodId;\n        }) ? styles.ingredientContainerActive : styles.ingredientContainer,\n        onPress: function onPress() {\n          dispatch(addSingleIngredient(item));\n          navigation.navigate(\"AddSingleIngredientScreen\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.food.image\n        },\n        style: styles.ingredientImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        style: styles.ingredientLabel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, item.food.label));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }) : null : null, React.createElement(View, {\n    style: styles.ingredientsList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, newIngredients.length !== 0 ? React.createElement(FlatList, {\n    data: newIngredients,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      return React.createElement(Pressable, {\n        key: index,\n        style: selectedIngredients.some(function (el) {\n          return el.food.foodId === item.food.foodId;\n        }) ? styles.ingredientContainerActive : styles.ingredientContainer,\n        onPress: function onPress() {\n          return dispatch(toggleSelectIngredient(item));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.food.image\n        },\n        style: styles.ingredientImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        style: styles.ingredientLabel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }\n      }, item.food.label));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }) : React.createElement(Text, {\n    style: {\n      marginTop: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"You don't have ingredients yet.\"))));\n};\n\nexport default ManualOption;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/ManualOption.js"],"names":["React","DropDownPicker","useDispatch","useSelector","SearchBar","COLORS","fetchIngredientsSearchApi","addSingleIngredient","ManualOption","navigation","dispatch","useState","clearSearchBar","setClearSearchBar","chooseQuantity","setChooseQuantity","ingredient","quantity","amount","unit","singleIngredientChosen","setSingleIngredientChosen","ingredientsResults","state","ingredientsSearch","ingredients","newIngredients","selectedIngredients","styles","StyleSheet","create","mainContainer","flex","marginTop","marginRight","marginLeft","justifyContent","alignItems","mainTitle","fontSize","width","fontWeight","textAlign","resultFlatList","backgroundColor","white","borderRadius","marginBottom","ingredientContainer","flexDirection","margin","height","padding","ingredientContainerActive","lightCoral","ingredientImage","ingredientLabel","flexWrap","modalTitle","ingredientsList","footer","display","cancelButton","grey","confirmButton","buttonText","color","quantityContainer","position","quantitySubtitle","quantityInputContainer","quantityInput","borderBottomWidth","borderBottomColor","quantityNavigationBack","quantityNavigationConfirm","length","item","index","some","el","food","foodId","navigate","uri","image","label","toString","toggleSelectIngredient"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;AAYA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP;AACA,SAASC,MAAT;AACA,OAAOC,yBAAP;AACA,SAASC,mBAAT;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACvC,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADuC,wBAEKF,KAAK,CAACW,QAAN,CAAe,KAAf,CAFL;AAAA;AAAA,MAEhCC,cAFgC;AAAA,MAEhBC,iBAFgB;;AAAA,yBAGKb,KAAK,CAACW,QAAN,CAAe,KAAf,CAHL;AAAA;AAAA,MAGhCG,cAHgC;AAAA,MAGhBC,iBAHgB;;AAAA,yBAIqBf,KAAK,CAACW,QAAN,CAAe;AACzEK,IAAAA,UAAU,EAAE,EAD6D;AAEzEC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,CADA;AAERC,MAAAA,IAAI,EAAE;AAFE;AAF+D,GAAf,CAJrB;AAAA;AAAA,MAIhCC,sBAJgC;AAAA,MAIRC,yBAJQ;;AAWvC,MAAMC,kBAAkB,GAAGnB,WAAW,CACpC,UAACoB,KAAD;AAAA,WAAWA,KAAK,CAACC,iBAAN,CAAwBC,WAAnC;AAAA,GADoC,CAAtC;AAGA,MAAMC,cAAc,GAAGvB,WAAW,CAChC,UAACoB,KAAD;AAAA,WAAWA,KAAK,CAACG,cAAN,CAAqBA,cAAhC;AAAA,GADgC,CAAlC;AAGA,MAAMC,mBAAmB,GAAGxB,WAAW,CACrC,UAACoB,KAAD;AAAA,WAAWA,KAAK,CAACG,cAAN,CAAqBC,mBAAhC;AAAA,GADqC,CAAvC;AAIA,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,CADO;AAEbC,MAAAA,SAAS,EAAE,EAFE;AAGbC,MAAAA,WAAW,EAAE,EAHA;AAIbC,MAAAA,UAAU,EAAE,EAJC;AAKbC,MAAAA,cAAc,EAAE,QALH;AAMbC,MAAAA,UAAU,EAAE;AANC,KADgB;AAS/BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,UAAU,EAAE,KAHH;AAITC,MAAAA,SAAS,EAAE;AAJF,KAToB;AAe/BC,IAAAA,cAAc,EAAE;AACdC,MAAAA,eAAe,EAAEvC,MAAM,CAACwC,KADV;AAEdC,MAAAA,YAAY,EAAE,CAFA;AAGdX,MAAAA,UAAU,EAAE,CAHE;AAIdD,MAAAA,WAAW,EAAE,CAJC;AAKdD,MAAAA,SAAS,EAAE,EALG;AAMdc,MAAAA,YAAY,EAAE;AANA,KAfe;AAuB/BC,IAAAA,mBAAmB,EAAE;AACnBhB,MAAAA,IAAI,EAAE,CADa;AAEnBiB,MAAAA,aAAa,EAAE,KAFI;AAGnBZ,MAAAA,UAAU,EAAE,QAHO;AAInBa,MAAAA,MAAM,EAAE,EAJW;AAKnBf,MAAAA,UAAU,EAAE,EALO;AAMnBgB,MAAAA,MAAM,EAAE,EANW;AAOnBC,MAAAA,OAAO,EAAE,CAPU;AAQnBR,MAAAA,eAAe,EAAEvC,MAAM,CAACwC;AARL,KAvBU;AAiC/BQ,IAAAA,yBAAyB,EAAE;AACzBrB,MAAAA,IAAI,EAAE,CADmB;AAEzBiB,MAAAA,aAAa,EAAE,KAFU;AAGzBZ,MAAAA,UAAU,EAAE,QAHa;AAIzBa,MAAAA,MAAM,EAAE,EAJiB;AAKzBf,MAAAA,UAAU,EAAE,EALa;AAMzBgB,MAAAA,MAAM,EAAE,EANiB;AAOzBP,MAAAA,eAAe,EAAEvC,MAAM,CAACiD,UAPC;AAQzBF,MAAAA,OAAO,EAAE;AARgB,KAjCI;AA2C/BG,IAAAA,eAAe,EAAE;AACfJ,MAAAA,MAAM,EAAE,EADO;AAEfX,MAAAA,KAAK,EAAE,EAFQ;AAGfM,MAAAA,YAAY,EAAE;AAHC,KA3Cc;AAgD/BU,IAAAA,eAAe,EAAE;AACfrB,MAAAA,UAAU,EAAE,EADG;AAEfI,MAAAA,QAAQ,EAAE,EAFK;AAGfkB,MAAAA,QAAQ,EAAE;AAHK,KAhDc;AAqD/BC,IAAAA,UAAU,EAAE;AACVnB,MAAAA,QAAQ,EAAE,EADA;AAEVE,MAAAA,UAAU,EAAE,KAFF;AAGVR,MAAAA,SAAS,EAAE,EAHD;AAIVc,MAAAA,YAAY,EAAE;AAJJ,KArDmB;AA2D/BY,IAAAA,eAAe,EAAE;AACf3B,MAAAA,IAAI,EAAE;AADS,KA3Dc;AA8D/B4B,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,MADH;AAENZ,MAAAA,aAAa,EAAE,KAFT;AAGNb,MAAAA,cAAc,EAAE,eAHV;AAINC,MAAAA,UAAU,EAAE,QAJN;AAKNc,MAAAA,MAAM,EAAE;AALF,KA9DuB;AAqE/BW,IAAAA,YAAY,EAAE;AACZ9B,MAAAA,IAAI,EAAE,CADM;AAEZI,MAAAA,cAAc,EAAE,QAFJ;AAGZC,MAAAA,UAAU,EAAE,QAHA;AAIZe,MAAAA,OAAO,EAAE,EAJG;AAKZR,MAAAA,eAAe,EAAEvC,MAAM,CAAC0D,IALZ;AAMZZ,MAAAA,MAAM,EAAE;AANI,KArEiB;AA6E/Ba,IAAAA,aAAa,EAAE;AACbhC,MAAAA,IAAI,EAAE,CADO;AAEbI,MAAAA,cAAc,EAAE,QAFH;AAGbC,MAAAA,UAAU,EAAE,QAHC;AAIbe,MAAAA,OAAO,EAAE,EAJI;AAKbR,MAAAA,eAAe,EAAEvC,MAAM,CAACiD,UALX;AAMbH,MAAAA,MAAM,EAAE;AANK,KA7EgB;AAqF/Bc,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE7D,MAAM,CAACwC,KADJ;AAEVN,MAAAA,QAAQ,EAAE;AAFA,KArFmB;AAyF/B4B,IAAAA,iBAAiB,EAAE;AACjBnC,MAAAA,IAAI,EAAE,CADW;AAEjBoC,MAAAA,QAAQ,EAAE,UAFO;AAGjBjB,MAAAA,MAAM,EAAE,MAHS;AAIjBX,MAAAA,KAAK,EAAE,MAJU;AAKjBI,MAAAA,eAAe,EAAEvC,MAAM,CAACwC,KALP;AAMjBgB,MAAAA,OAAO,EAAE/C,cAAc,GAAG,MAAH,GAAY,MANlB;AAOjBuB,MAAAA,UAAU,EAAE,QAPK;AAQjBD,MAAAA,cAAc,EAAE;AARC,KAzFY;AAmG/BiC,IAAAA,gBAAgB,EAAE;AAChB9B,MAAAA,QAAQ,EAAE,EADM;AAEhBQ,MAAAA,YAAY,EAAE;AAFE,KAnGa;AAuG/BuB,IAAAA,sBAAsB,EAAE;AACtBT,MAAAA,OAAO,EAAE,MADa;AAEtBZ,MAAAA,aAAa,EAAE,KAFO;AAGtBF,MAAAA,YAAY,EAAE,EAHQ;AAItBP,MAAAA,KAAK,EAAE,MAJe;AAKtBJ,MAAAA,cAAc,EAAE;AALM,KAvGO;AA8G/BmC,IAAAA,aAAa,EAAE;AACbC,MAAAA,iBAAiB,EAAE,CADN;AAEbC,MAAAA,iBAAiB,EAAEpE,MAAM,CAACiD,UAFb;AAGbd,MAAAA,KAAK,EAAE;AAHM,KA9GgB;AAmH/BkC,IAAAA,sBAAsB,EAAE;AACtB1C,MAAAA,IAAI,EAAE,CADgB;AAEtBI,MAAAA,cAAc,EAAE,QAFM;AAGtBC,MAAAA,UAAU,EAAE,QAHU;AAItBe,MAAAA,OAAO,EAAE,EAJa;AAKtBR,MAAAA,eAAe,EAAEvC,MAAM,CAACiD,UALF;AAMtBH,MAAAA,MAAM,EAAE;AANc,KAnHO;AA2H/BwB,IAAAA,yBAAyB,EAAE;AACzB3C,MAAAA,IAAI,EAAE,CADmB;AAEzBI,MAAAA,cAAc,EAAE,QAFS;AAGzBC,MAAAA,UAAU,EAAE,QAHa;AAIzBe,MAAAA,OAAO,EAAE,EAJgB;AAKzBR,MAAAA,eAAe,EAAEvC,MAAM,CAAC0D,IALC;AAMzBZ,MAAAA,MAAM,EAAE;AANiB;AA3HI,GAAlB,CAAf;AAqIA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,SAAD;AACE,IAAA,UAAU,EAAC,gBADb;AAEE,IAAA,YAAY,EAAEhC,yBAFhB;AAGE,IAAA,KAAK,EAAEM,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGU,kBAAkB,GACjBA,kBAAkB,CAACsD,MAAnB,KAA8B,CAA9B,GACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEtD,kBADR;AAEE,IAAA,KAAK,EAAEM,MAAM,CAACe,cAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGkC,IAAH,SAAGA,IAAH;AAAA,UAASC,KAAT,SAASA,KAAT;AAAA,aACV,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EACHpD,cAAc,CAACqD,IAAf,CACE,UAACC,EAAD;AAAA,iBAAQA,EAAE,CAACC,IAAH,CAAQC,MAAR,KAAmBL,IAAI,CAACI,IAAL,CAAUC,MAArC;AAAA,SADF,IAGItD,MAAM,CAACyB,yBAHX,GAIIzB,MAAM,CAACoB,mBAPf;AASE,QAAA,OAAO,EAAE,mBAAM;AACbtC,UAAAA,QAAQ,CAACH,mBAAmB,CAACsE,IAAD,CAApB,CAAR;AACApE,UAAAA,UAAU,CAAC0E,QAAX,CAAoB,2BAApB;AACD,SAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEP,IAAI,CAACI,IAAL,CAAUI;AAAjB,SADV;AAEE,QAAA,KAAK,EAAEzD,MAAM,CAAC2B,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAkBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,MAAM,CAAC4B,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCqB,IAAI,CAACI,IAAL,CAAUK,KAAhD,CAlBF,CADU;AAAA,KAHd;AAyBE,IAAA,YAAY,EAAE,sBAACT,IAAD,EAAOC,KAAP;AAAA,aAAiBA,KAAK,CAACS,QAAN,EAAjB;AAAA,KAzBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GA4BI,IA7Ba,GA8Bf,IArCN,EAsCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3D,MAAM,CAAC+B,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,cAAc,CAACkD,MAAf,KAA0B,CAA1B,GACC,oBAAC,QAAD;AACE,IAAA,IAAI,EAAElD,cADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGmD,IAAH,SAAGA,IAAH;AAAA,UAASC,KAAT,SAASA,KAAT;AAAA,aACV,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EACHnD,mBAAmB,CAACoD,IAApB,CACE,UAACC,EAAD;AAAA,iBAAQA,EAAE,CAACC,IAAH,CAAQC,MAAR,KAAmBL,IAAI,CAACI,IAAL,CAAUC,MAArC;AAAA,SADF,IAGItD,MAAM,CAACyB,yBAHX,GAIIzB,MAAM,CAACoB,mBAPf;AASE,QAAA,OAAO,EAAE;AAAA,iBAAMtC,QAAQ,CAAC8E,sBAAsB,CAACX,IAAD,CAAvB,CAAd;AAAA,SATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE;AAAEO,UAAAA,GAAG,EAAEP,IAAI,CAACI,IAAL,CAAUI;AAAjB,SADV;AAEE,QAAA,KAAK,EAAEzD,MAAM,CAAC2B,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAeE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,MAAM,CAAC4B,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCqB,IAAI,CAACI,IAAL,CAAUK,KAAhD,CAfF,CADU;AAAA,KAFd;AAqBE,IAAA,YAAY,EAAE,sBAACT,IAAD,EAAOC,KAAP;AAAA,aAAiBA,KAAK,CAACS,QAAN,EAAjB;AAAA,KArBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAyBC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEtD,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCA1BJ,CAtCF,CADF,CADF;AA0ED,CApOD;;AAsOA,eAAezB,YAAf","sourcesContent":["import React from \"react\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { Image } from \"react-native\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Button,\n  FlatList,\n  Pressable,\n} from \"react-native\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SearchBar from \"../components/SearchBar\";\nimport { COLORS } from \"../libs/constants\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\nimport { addSingleIngredient } from \"../libs/redux/actions/NewIngredientsActions\";\n\nconst ManualOption = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const [clearSearchBar, setClearSearchBar] = React.useState(false);\n  const [chooseQuantity, setChooseQuantity] = React.useState(false);\n  const [singleIngredientChosen, setSingleIngredientChosen] = React.useState({\n    ingredient: {},\n    quantity: {\n      amount: 0,\n      unit: \"\",\n    },\n  });\n  const ingredientsResults = useSelector(\n    (state) => state.ingredientsSearch.ingredients\n  );\n  const newIngredients = useSelector(\n    (state) => state.newIngredients.newIngredients\n  );\n  const selectedIngredients = useSelector(\n    (state) => state.newIngredients.selectedIngredients\n  );\n\n  const styles = StyleSheet.create({\n    mainContainer: {\n      flex: 1,\n      marginTop: 40,\n      marginRight: 10,\n      marginLeft: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    mainTitle: {\n      fontSize: 25,\n      width: \"80%\",\n      fontWeight: \"800\",\n      textAlign: \"center\",\n    },\n    resultFlatList: {\n      backgroundColor: COLORS.white,\n      borderRadius: 7,\n      marginLeft: 6,\n      marginRight: 6,\n      marginTop: 10,\n      marginBottom: 10,\n    },\n    ingredientContainer: {\n      flex: 1,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      margin: 10,\n      marginLeft: 20,\n      height: 80,\n      padding: 5,\n      backgroundColor: COLORS.white,\n    },\n    ingredientContainerActive: {\n      flex: 1,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      margin: 10,\n      marginLeft: 20,\n      height: 80,\n      backgroundColor: COLORS.lightCoral,\n      padding: 5,\n    },\n    ingredientImage: {\n      height: 40,\n      width: 40,\n      borderRadius: 7,\n    },\n    ingredientLabel: {\n      marginLeft: 10,\n      fontSize: 20,\n      flexWrap: \"wrap\",\n    },\n    modalTitle: {\n      fontSize: 20,\n      fontWeight: \"800\",\n      marginTop: 30,\n      marginBottom: 20,\n    },\n    ingredientsList: {\n      flex: 1,\n    },\n    footer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      height: 70,\n    },\n    cancelButton: {\n      flex: 2,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\",\n    },\n    confirmButton: {\n      flex: 2,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\",\n    },\n    buttonText: {\n      color: COLORS.white,\n      fontSize: 20,\n    },\n    quantityContainer: {\n      flex: 1,\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: COLORS.white,\n      display: chooseQuantity ? \"flex\" : \"none\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n    },\n    quantitySubtitle: {\n      fontSize: 25,\n      marginBottom: 10,\n    },\n    quantityInputContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginBottom: 30,\n      width: \"100%\",\n      justifyContent: \"space-evenly\",\n    },\n    quantityInput: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.lightCoral,\n      width: 50,\n    },\n    quantityNavigationBack: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\",\n    },\n    quantityNavigationConfirm: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\",\n    },\n  });\n\n  return (\n    <>\n      <View style={styles.mainContainer}>\n        <Text style={styles.mainTitle}>Add an ingredient</Text>\n        <SearchBar\n          searchType=\"ingredientsAPI\"\n          onChangeProp={fetchIngredientsSearchApi}\n          clear={clearSearchBar}\n        />\n        {ingredientsResults ? (\n          ingredientsResults.length !== 0 ? (\n            <FlatList\n              data={ingredientsResults}\n              style={styles.resultFlatList}\n              renderItem={({ item, index }) => (\n                <Pressable\n                  key={index}\n                  style={\n                    newIngredients.some(\n                      (el) => el.food.foodId === item.food.foodId\n                    )\n                      ? styles.ingredientContainerActive\n                      : styles.ingredientContainer\n                  }\n                  onPress={() => {\n                    dispatch(addSingleIngredient(item));\n                    navigation.navigate(\"AddSingleIngredientScreen\");\n                  }}\n                >\n                  <Image\n                    source={{ uri: item.food.image }}\n                    style={styles.ingredientImage}\n                  />\n                  <Text style={styles.ingredientLabel}>{item.food.label}</Text>\n                </Pressable>\n              )}\n              keyExtractor={(item, index) => index.toString()}\n            />\n          ) : null\n        ) : null}\n        <View style={styles.ingredientsList}>\n          {newIngredients.length !== 0 ? (\n            <FlatList\n              data={newIngredients}\n              renderItem={({ item, index }) => (\n                <Pressable\n                  key={index}\n                  style={\n                    selectedIngredients.some(\n                      (el) => el.food.foodId === item.food.foodId\n                    )\n                      ? styles.ingredientContainerActive\n                      : styles.ingredientContainer\n                  }\n                  onPress={() => dispatch(toggleSelectIngredient(item))}\n                >\n                  <Image\n                    source={{ uri: item.food.image }}\n                    style={styles.ingredientImage}\n                  />\n                  <Text style={styles.ingredientLabel}>{item.food.label}</Text>\n                </Pressable>\n              )}\n              keyExtractor={(item, index) => index.toString()}\n            />\n          ) : (\n            <Text style={{ marginTop: 50 }}>\n              You don't have ingredients yet.\n            </Text>\n          )}\n        </View>\n      </View>\n    </>\n  );\n};\n\nexport default ManualOption;\n"]},"metadata":{},"sourceType":"module"}