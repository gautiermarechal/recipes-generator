{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/AddSingleIngredientScreen.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COLORS } from \"../libs/constants\";\nimport Icon from \"@expo/vector-icons/Octicons\";\nimport { addAmountQuantitySingleIngredient, addUnitQuantitySingleIngredient } from \"../libs/redux/actions/NewIngredientsActions\";\nimport { Picker } from \"@react-native-picker/picker\";\n\nvar AddSingleIngredientScreen = function AddSingleIngredientScreen() {\n  var _singleIngredientChos, _singleIngredientChos2;\n\n  var singleIngredientChosen = useSelector(function (state) {\n    return state.newIngredients.singleIngredient;\n  });\n\n  var _useState = useState({\n    label: \"Grams\",\n    value: \"grams\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedUnit = _useState2[0],\n      setSelectedUnit = _useState2[1];\n\n  var dispatch = useDispatch();\n  var styles = StyleSheet.create({\n    quantityContainer: {\n      flex: 1,\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    quantitySubtitle: {\n      fontSize: 25,\n      marginBottom: 10\n    },\n    quantityInputContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginBottom: 30,\n      width: \"100%\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    },\n    quantityInput: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.lightCoral,\n      width: 50\n    },\n    quantityNavigationBack: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\"\n    },\n    quantityNavigationConfirm: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\"\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(KeyboardAvoidingView, {\n    style: styles.quantityContainer,\n    behavior: \"position\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, singleIngredientChosen ? React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: singleIngredientChosen == null ? void 0 : (_singleIngredientChos = singleIngredientChosen.food) == null ? void 0 : _singleIngredientChos.image\n    },\n    style: {\n      height: 150,\n      width: 150,\n      borderRadius: 10,\n      marginTop: 60\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontWeight: \"800\",\n      fontSize: 35,\n      marginTop: 10,\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, singleIngredientChosen == null ? void 0 : (_singleIngredientChos2 = singleIngredientChosen.food) == null ? void 0 : _singleIngredientChos2.label), React.createElement(View, {\n    style: {\n      flex: 1,\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.quantitySubtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Quantity\"), React.createElement(View, {\n    style: styles.quantityInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: styles.quantityInput,\n    returnKeyType: \"done\",\n    returnKeyLabel: \"Done\",\n    onBlur: function onBlur(text) {\n      return dispatch(addAmountQuantitySingleIngredient(text));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), React.createElement(Pressable, {\n    style: {\n      display: \"flex\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, selectedUnit.label))))) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Loading\")));\n};\n\nexport default AddSingleIngredientScreen;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/AddSingleIngredientScreen.js"],"names":["React","useEffect","useState","DropDownPicker","useDispatch","useSelector","COLORS","Icon","addAmountQuantitySingleIngredient","addUnitQuantitySingleIngredient","Picker","AddSingleIngredientScreen","singleIngredientChosen","state","newIngredients","singleIngredient","label","value","selectedUnit","setSelectedUnit","dispatch","styles","StyleSheet","create","quantityContainer","flex","height","width","backgroundColor","white","alignItems","justifyContent","quantitySubtitle","fontSize","marginBottom","quantityInputContainer","display","flexDirection","quantityInput","borderBottomWidth","borderBottomColor","lightCoral","quantityNavigationBack","padding","quantityNavigationConfirm","grey","uri","food","image","borderRadius","marginTop","fontWeight","textAlign","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { Image } from \"react-native\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Button,\n  FlatList,\n  Pressable,\n} from \"react-native\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COLORS } from \"../libs/constants\";\nimport Icon from \"react-native-vector-icons/Octicons\";\nimport {\n  addAmountQuantitySingleIngredient,\n  addUnitQuantitySingleIngredient,\n} from \"../libs/redux/actions/NewIngredientsActions\";\nimport { Picker } from \"@react-native-picker/picker\";\n\nconst AddSingleIngredientScreen = () => {\n  const singleIngredientChosen = useSelector(\n    (state) => state.newIngredients.singleIngredient\n  );\n\n  const [selectedUnit, setSelectedUnit] = useState({\n    label: \"Grams\",\n    value: \"grams\",\n  });\n\n  const dispatch = useDispatch();\n\n  const styles = StyleSheet.create({\n    quantityContainer: {\n      flex: 1,\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    quantitySubtitle: {\n      fontSize: 25,\n      marginBottom: 10,\n    },\n    quantityInputContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginBottom: 30,\n      width: \"100%\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n    },\n    quantityInput: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.lightCoral,\n      width: 50,\n    },\n    quantityNavigationBack: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\",\n    },\n    quantityNavigationConfirm: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\",\n    },\n  });\n\n  return (\n    <>\n      <KeyboardAvoidingView\n        style={styles.quantityContainer}\n        behavior=\"position\"\n      >\n        {singleIngredientChosen ? (\n          <>\n            <View\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Image\n                source={{\n                  uri: singleIngredientChosen?.food?.image,\n                }}\n                style={{\n                  height: 150,\n                  width: 150,\n                  borderRadius: 10,\n                  marginTop: 60,\n                }}\n              />\n            </View>\n\n            <Text\n              style={{\n                fontWeight: \"800\",\n                fontSize: 35,\n                marginTop: 10,\n                textAlign: \"center\",\n              }}\n            >\n              {singleIngredientChosen?.food?.label}\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                width: \"100%\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: 30,\n              }}\n            >\n              <Text style={styles.quantitySubtitle}>Quantity</Text>\n              <View style={styles.quantityInputContainer}>\n                <TextInput\n                  keyboardType=\"numeric\"\n                  style={styles.quantityInput}\n                  returnKeyType=\"done\"\n                  returnKeyLabel=\"Done\"\n                  onBlur={(text) =>\n                    dispatch(addAmountQuantitySingleIngredient(text))\n                  }\n                />\n                <Pressable style={{ display: \"flex\" }}>\n                  <Text>{selectedUnit.label}</Text>\n                </Pressable>\n              </View>\n            </View>\n          </>\n        ) : (\n          <Text>Loading</Text>\n        )}\n      </KeyboardAvoidingView>\n    </>\n  );\n};\n\nexport default AddSingleIngredientScreen;\n"]},"metadata":{},"sourceType":"module"}