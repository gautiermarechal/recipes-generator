{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/AddSingleIngredientScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COLORS } from \"../libs/constants\";\nimport Icon from \"@expo/vector-icons/Octicons\";\n\nvar AddSingleIngredientScreen = function AddSingleIngredientScreen() {\n  var _singleIngredientChos, _singleIngredientChos2, _singleIngredientChos3, _singleIngredientChos4;\n\n  var singleIngredientChosen = useSelector(function (state) {\n    return state.newIngredients.singleIngredient;\n  });\n  var dispatch = useDispatch();\n  var styles = StyleSheet.create({\n    quantityContainer: {\n      flex: 1,\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    quantitySubtitle: {\n      fontSize: 25,\n      marginBottom: 10\n    },\n    quantityInputContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginBottom: 30,\n      width: \"100%\",\n      justifyContent: \"space-evenly\"\n    },\n    quantityInput: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.lightCoral,\n      width: 50\n    },\n    quantityNavigationBack: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\"\n    },\n    quantityNavigationConfirm: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\"\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(KeyboardAvoidingView, {\n    style: styles.quantityContainer,\n    behavior: \"padding\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, singleIngredientChosen.ingredient !== {} ? React.createElement(React.Fragment, null, React.createElement(Image, {\n    source: {\n      uri: singleIngredientChosen == null ? void 0 : (_singleIngredientChos = singleIngredientChosen.ingredient) == null ? void 0 : (_singleIngredientChos2 = _singleIngredientChos.food) == null ? void 0 : _singleIngredientChos2.image\n    },\n    style: {\n      height: 150,\n      width: 150,\n      borderRadius: 10,\n      marginTop: 60\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: \"800\",\n      fontSize: 35,\n      marginTop: 10,\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, singleIngredientChosen == null ? void 0 : (_singleIngredientChos3 = singleIngredientChosen.ingredient) == null ? void 0 : (_singleIngredientChos4 = _singleIngredientChos3.food) == null ? void 0 : _singleIngredientChos4.label), React.createElement(View, {\n    style: {\n      flex: 1,\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.quantitySubtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Quantity\"), React.createElement(View, {\n    style: styles.quantityInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: styles.quantityInput,\n    returnKeyType: \"done\",\n    returnKeyLabel: \"Done\",\n    onBlur: function onBlur(text) {\n      return setSingleIngredientChosen({\n        ingredient: singleIngredientChosen.ingredient,\n        quantity: {\n          amount: text,\n          unit: \"\"\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), React.createElement(DropDownPicker, {\n    items: [{\n      label: \"Unit\",\n      value: \"unit\",\n      icon: function icon() {\n        return React.createElement(Icon, {\n          name: \"flag\",\n          size: 18,\n          color: \"#900\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 35\n          }\n        });\n      }\n    }, {\n      label: \"Weight\",\n      value: \"weight\",\n      untouchable: true\n    }, {\n      label: \"Grams\",\n      value: \"grams\",\n      parent: \"weight\"\n    }, {\n      label: \"Ounces\",\n      value: \"ounces\",\n      parent: \"weight\"\n    }, {\n      label: \"Cups\",\n      value: \"cups\",\n      parent: \"weight\"\n    }, {\n      label: \"Volumes\",\n      value: \"volumes\",\n      untouchable: true\n    }, {\n      label: \"Oz\",\n      value: \"teaspoon\",\n      parent: \"volume\"\n    }, {\n      label: \"Milliliter\",\n      value: \"mL\",\n      parent: \"volume\"\n    }, {\n      label: \"Liter\",\n      value: \"L\",\n      parent: \"volume\"\n    }],\n    defaultValue: \"grams\",\n    containerStyle: {\n      height: 40,\n      width: 100\n    },\n    style: {\n      backgroundColor: COLORS.white,\n      zIndex: 1000\n    },\n    itemStyle: {\n      justifyContent: \"flex-start\"\n    },\n    onChangeItem: function onChangeItem(item) {\n      return setSingleIngredientChosen(_objectSpread(_objectSpread({}, singleIngredientChosen), {}, {\n        quantity: _objectSpread(_objectSpread({}, singleIngredientChosen.quantity), {}, {\n          unit: item.value\n        })\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })))) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Loading\")));\n};\n\nexport default AddSingleIngredientScreen;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/AddSingleIngredientScreen.js"],"names":["React","DropDownPicker","useDispatch","useSelector","COLORS","Icon","AddSingleIngredientScreen","singleIngredientChosen","state","newIngredients","singleIngredient","dispatch","styles","StyleSheet","create","quantityContainer","flex","position","height","width","backgroundColor","white","alignItems","justifyContent","quantitySubtitle","fontSize","marginBottom","quantityInputContainer","display","flexDirection","quantityInput","borderBottomWidth","borderBottomColor","lightCoral","quantityNavigationBack","padding","quantityNavigationConfirm","grey","ingredient","uri","food","image","borderRadius","marginTop","fontWeight","textAlign","label","text","setSingleIngredientChosen","quantity","amount","unit","value","icon","untouchable","parent","zIndex","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { Image } from \"react-native\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Button,\n  FlatList,\n  Pressable,\n} from \"react-native\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COLORS } from \"../libs/constants\";\nimport Icon from \"react-native-vector-icons/Octicons\";\n\nconst AddSingleIngredientScreen = () => {\n  const singleIngredientChosen = useSelector(\n    (state) => state.newIngredients.singleIngredient\n  );\n\n  const dispatch = useDispatch();\n\n  const styles = StyleSheet.create({\n    quantityContainer: {\n      flex: 1,\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n    },\n    quantitySubtitle: {\n      fontSize: 25,\n      marginBottom: 10,\n    },\n    quantityInputContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginBottom: 30,\n      width: \"100%\",\n      justifyContent: \"space-evenly\",\n    },\n    quantityInput: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.lightCoral,\n      width: 50,\n    },\n    quantityNavigationBack: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.lightCoral,\n      height: \"100%\",\n    },\n    quantityNavigationConfirm: {\n      flex: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n      backgroundColor: COLORS.grey,\n      height: \"100%\",\n    },\n  });\n\n  return (\n    <>\n      <KeyboardAvoidingView style={styles.quantityContainer} behavior=\"padding\">\n        {singleIngredientChosen.ingredient !== {} ? (\n          <>\n            <Image\n              source={{\n                uri: singleIngredientChosen?.ingredient?.food?.image,\n              }}\n              style={{\n                height: 150,\n                width: 150,\n                borderRadius: 10,\n                marginTop: 60,\n              }}\n            />\n            <Text\n              style={{\n                fontWeight: \"800\",\n                fontSize: 35,\n                marginTop: 10,\n                textAlign: \"center\",\n              }}\n            >\n              {singleIngredientChosen?.ingredient?.food?.label}\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                width: \"100%\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: 30,\n              }}\n            >\n              <Text style={styles.quantitySubtitle}>Quantity</Text>\n              <View style={styles.quantityInputContainer}>\n                <TextInput\n                  keyboardType=\"numeric\"\n                  style={styles.quantityInput}\n                  returnKeyType=\"done\"\n                  returnKeyLabel=\"Done\"\n                  onBlur={(text) =>\n                    setSingleIngredientChosen({\n                      ingredient: singleIngredientChosen.ingredient,\n                      quantity: {\n                        amount: text,\n                        unit: \"\",\n                      },\n                    })\n                  }\n                />\n                <DropDownPicker\n                  items={[\n                    {\n                      label: \"Unit\",\n                      value: \"unit\",\n                      icon: () => <Icon name=\"flag\" size={18} color=\"#900\" />,\n                    },\n                    { label: \"Weight\", value: \"weight\", untouchable: true },\n                    { label: \"Grams\", value: \"grams\", parent: \"weight\" },\n                    { label: \"Ounces\", value: \"ounces\", parent: \"weight\" },\n                    { label: \"Cups\", value: \"cups\", parent: \"weight\" },\n\n                    {\n                      label: \"Volumes\",\n                      value: \"volumes\",\n                      untouchable: true,\n                    },\n                    { label: \"Oz\", value: \"teaspoon\", parent: \"volume\" },\n                    { label: \"Milliliter\", value: \"mL\", parent: \"volume\" },\n                    { label: \"Liter\", value: \"L\", parent: \"volume\" },\n                  ]}\n                  defaultValue={\"grams\"}\n                  containerStyle={{ height: 40, width: 100 }}\n                  style={{ backgroundColor: COLORS.white, zIndex: 1000 }}\n                  itemStyle={{ justifyContent: \"flex-start\" }}\n                  onChangeItem={(item) =>\n                    setSingleIngredientChosen({\n                      ...singleIngredientChosen,\n                      quantity: {\n                        ...singleIngredientChosen.quantity,\n                        unit: item.value,\n                      },\n                    })\n                  }\n                />\n              </View>\n            </View>\n          </>\n        ) : (\n          <Text>Loading</Text>\n        )}\n      </KeyboardAvoidingView>\n    </>\n  );\n};\n\nexport default AddSingleIngredientScreen;\n"]},"metadata":{},"sourceType":"module"}