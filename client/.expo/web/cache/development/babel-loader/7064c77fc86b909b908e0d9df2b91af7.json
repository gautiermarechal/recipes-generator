{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar intialState = {\n  status: \"idle\",\n  newIngredients: [],\n  selectedIngredients: []\n};\n\nvar NewIngredientsReducer = function NewIngredientsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"REQUEST_NEW_INGREDIENTS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: \"requested\"\n      });\n\n    case \"RECEIVE_NEW_INGREDIENTS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: \"received\",\n        newIngredients: [].concat(_toConsumableArray(state.newIngredients), [action.data])\n      });\n\n    case \"REMOVE_INGREDIENT\":\n      var removeIndex = state.newIngredients.indexOf(action.data);\n\n      if (removeIndex > -1) {\n        state.newIngredients.splice(removeIndex, 1);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: \"received\",\n        newIngredients: _toConsumableArray(state.newIngredients)\n      });\n\n    case \"REMOVE_SELECTED_INGREDIENTS\":\n      state.selectedIngredients.forEach(function (item) {\n        var removeIndex = state.newIngredients.indexOf(item);\n\n        if (removeIndex > -1) {\n          state.newIngredients.splice(removeIndex, 1);\n        }\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newIngredients: _toConsumableArray(state.newIngredients)\n      });\n\n    case \"TOGGLE_SELECT_INGREDIENT\":\n      if (state.selectedIngredients.includes(action.data)) {\n        var toggleIndex = state.selectedIngredients.indexOf(action.data);\n\n        if (toggleIndex > -1) {\n          state.selectedIngredients.splice(toggleIndex, 1);\n          return _objectSpread(_objectSpread({}, state), {}, {\n            selectedIngredients: _toConsumableArray(state.selectedIngredients)\n          });\n        }\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          selectedIngredients: [].concat(_toConsumableArray(state.selectedIngredients), [action.data])\n        });\n      }\n\n    case \"ERROR_NEW_INGREDIENTS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: \"error\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default NewIngredientsReducer;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/libs/redux/reducers/NewIngredientsReducer.js"],"names":["intialState","status","newIngredients","selectedIngredients","NewIngredientsReducer","state","action","type","data","removeIndex","indexOf","splice","forEach","item","includes","toggleIndex"],"mappings":";;;;;;;AAAA,IAAMA,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,MADU;AAElBC,EAAAA,cAAc,EAAE,EAFE;AAGlBC,EAAAA,mBAAmB,EAAE;AAHH,CAApB;;AAMA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBL,WAAwB;AAAA,MAAXM,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,yBAAL;AACE,6CAAYF,KAAZ;AAAmBJ,QAAAA,MAAM,EAAE;AAA3B;;AACF,SAAK,yBAAL;AACE,6CACKI,KADL;AAEEJ,QAAAA,MAAM,EAAE,UAFV;AAGEC,QAAAA,cAAc,+BAAMG,KAAK,CAACH,cAAZ,IAA4BI,MAAM,CAACE,IAAnC;AAHhB;;AAKF,SAAK,mBAAL;AACE,UAAMC,WAAW,GAAGJ,KAAK,CAACH,cAAN,CAAqBQ,OAArB,CAA6BJ,MAAM,CAACE,IAApC,CAApB;;AACA,UAAIC,WAAW,GAAG,CAAC,CAAnB,EAAsB;AACpBJ,QAAAA,KAAK,CAACH,cAAN,CAAqBS,MAArB,CAA4BF,WAA5B,EAAyC,CAAzC;AACD;;AACD,6CACKJ,KADL;AAEEJ,QAAAA,MAAM,EAAE,UAFV;AAGEC,QAAAA,cAAc,qBAAMG,KAAK,CAACH,cAAZ;AAHhB;;AAKF,SAAK,6BAAL;AACEG,MAAAA,KAAK,CAACF,mBAAN,CAA0BS,OAA1B,CAAkC,UAACC,IAAD,EAAU;AAC1C,YAAMJ,WAAW,GAAGJ,KAAK,CAACH,cAAN,CAAqBQ,OAArB,CAA6BG,IAA7B,CAApB;;AACA,YAAIJ,WAAW,GAAG,CAAC,CAAnB,EAAsB;AACpBJ,UAAAA,KAAK,CAACH,cAAN,CAAqBS,MAArB,CAA4BF,WAA5B,EAAyC,CAAzC;AACD;AACF,OALD;AAMA,6CACKJ,KADL;AAEEH,QAAAA,cAAc,qBAAMG,KAAK,CAACH,cAAZ;AAFhB;;AAIF,SAAK,0BAAL;AACE,UAAIG,KAAK,CAACF,mBAAN,CAA0BW,QAA1B,CAAmCR,MAAM,CAACE,IAA1C,CAAJ,EAAqD;AACnD,YAAMO,WAAW,GAAGV,KAAK,CAACF,mBAAN,CAA0BO,OAA1B,CAAkCJ,MAAM,CAACE,IAAzC,CAApB;;AACA,YAAIO,WAAW,GAAG,CAAC,CAAnB,EAAsB;AACpBV,UAAAA,KAAK,CAACF,mBAAN,CAA0BQ,MAA1B,CAAiCI,WAAjC,EAA8C,CAA9C;AACA,iDACKV,KADL;AAEEF,YAAAA,mBAAmB,qBAAME,KAAK,CAACF,mBAAZ;AAFrB;AAID;AACF,OATD,MASO;AACL,+CACKE,KADL;AAEEF,UAAAA,mBAAmB,+BAAME,KAAK,CAACF,mBAAZ,IAAiCG,MAAM,CAACE,IAAxC;AAFrB;AAID;;AACH,SAAK,uBAAL;AACE,6CAAYH,KAAZ;AAAmBJ,QAAAA,MAAM,EAAE;AAA3B;;AACF;AACE,aAAOI,KAAP;AAjDJ;AAmDD,CApDD;;AAsDA,eAAeD,qBAAf","sourcesContent":["const intialState = {\n  status: \"idle\",\n  newIngredients: [],\n  selectedIngredients: [],\n};\n\nconst NewIngredientsReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_NEW_INGREDIENTS\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_NEW_INGREDIENTS\":\n      return {\n        ...state,\n        status: \"received\",\n        newIngredients: [...state.newIngredients, action.data],\n      };\n    case \"REMOVE_INGREDIENT\":\n      const removeIndex = state.newIngredients.indexOf(action.data);\n      if (removeIndex > -1) {\n        state.newIngredients.splice(removeIndex, 1);\n      }\n      return {\n        ...state,\n        status: \"received\",\n        newIngredients: [...state.newIngredients],\n      };\n    case \"REMOVE_SELECTED_INGREDIENTS\":\n      state.selectedIngredients.forEach((item) => {\n        const removeIndex = state.newIngredients.indexOf(item);\n        if (removeIndex > -1) {\n          state.newIngredients.splice(removeIndex, 1);\n        }\n      });\n      return {\n        ...state,\n        newIngredients: [...state.newIngredients],\n      };\n    case \"TOGGLE_SELECT_INGREDIENT\":\n      if (state.selectedIngredients.includes(action.data)) {\n        const toggleIndex = state.selectedIngredients.indexOf(action.data);\n        if (toggleIndex > -1) {\n          state.selectedIngredients.splice(toggleIndex, 1);\n          return {\n            ...state,\n            selectedIngredients: [...state.selectedIngredients],\n          };\n        }\n      } else {\n        return {\n          ...state,\n          selectedIngredients: [...state.selectedIngredients, action.data],\n        };\n      }\n    case \"ERROR_NEW_INGREDIENTS\":\n      return { ...state, status: \"error\" };\n    default:\n      return state;\n  }\n};\n\nexport default NewIngredientsReducer;\n"]},"metadata":{},"sourceType":"module"}