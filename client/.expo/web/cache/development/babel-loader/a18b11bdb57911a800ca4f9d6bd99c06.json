{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/SearchBar.js\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { COLORS } from \"../libs/constants\";\nimport SearchIcon from \"../assets/magnifying-glass.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\n\nvar SearchBar = function SearchBar(_ref) {\n  var ingredients = _ref.ingredients,\n      searchType = _ref.searchType,\n      onChangeProp = _ref.onChangeProp,\n      clear = _ref.clear;\n  var dispatch = useDispatch();\n\n  var _useState = useState(function () {\n    return onChangeProp;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      onChange = _useState2[0],\n      setOnChange = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      placeholder = _useState4[0],\n      setPlaceholder = _useState4[1];\n\n  var inputRef = useRef(null);\n  React.useEffect(function () {\n    if (clear) {\n      inputRef.current.clear();\n    }\n  }, [clear]);\n  useEffect(function () {\n    if (searchType === \"ingredientsList\") {\n      setPlaceholder(\"Search your ingredients here:\");\n    } else if (searchType === \"ingredientsAPI\") {\n      setPlaceholder(\"Search any ingredients to add here\");\n    } else {\n      setPlaceholder(\"\");\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchIcon, {\n    width: 20,\n    height: 20,\n    fill: COLORS.grey,\n    style: styles.searchIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.searchBar,\n    placeholder: placeholder,\n    keyboardType: \"web-search\",\n    ref: inputRef,\n    onChangeText: ingredients ? function (text) {\n      return onChange(ingredients, dispatch, text);\n    } : function (text) {\n      return onChange(dispatch, text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(Pressable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"X\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7,\n    marginTop: 10\n  },\n  searchIcon: {\n    marginRight: 10\n  },\n  searchBar: {\n    backgroundColor: COLORS.white,\n    borderRadius: 7,\n    height: 20,\n    width: \"80%\"\n  }\n});\nexport default SearchBar;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/SearchBar.js"],"names":["React","useEffect","useRef","useState","TextInput","COLORS","SearchIcon","useDispatch","useSelector","searchIngredient","fetchIngredientsSearchApi","SearchBar","ingredients","searchType","onChangeProp","clear","dispatch","onChange","setOnChange","placeholder","setPlaceholder","inputRef","current","styles","container","grey","searchIcon","searchBar","text","StyleSheet","create","flexDirection","justifyContent","alignItems","backgroundColor","white","padding","borderRadius","marginTop","marginRight","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { View, StyleSheet, Pressable, Text } from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { COLORS } from \"../libs/constants\";\nimport SearchIcon from \"../assets/magnifying-glass.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\n\nconst SearchBar = ({ ingredients, searchType, onChangeProp, clear }) => {\n  const dispatch = useDispatch();\n  const [onChange, setOnChange] = useState(() => onChangeProp);\n  const [placeholder, setPlaceholder] = useState(\"\");\n  const inputRef = useRef(null);\n\n  React.useEffect(() => {\n    if (clear) {\n      inputRef.current.clear();\n    }\n  }, [clear]);\n\n  useEffect(() => {\n    if (searchType === \"ingredientsList\") {\n      setPlaceholder(\"Search your ingredients here:\");\n    } else if (searchType === \"ingredientsAPI\") {\n      setPlaceholder(\"Search any ingredients to add here\");\n    } else {\n      setPlaceholder(\"\");\n    }\n  });\n  return (\n    <>\n      <View style={styles.container}>\n        <SearchIcon\n          width={20}\n          height={20}\n          fill={COLORS.grey}\n          style={styles.searchIcon}\n        />\n        <TextInput\n          style={styles.searchBar}\n          placeholder={placeholder}\n          keyboardType=\"web-search\"\n          ref={inputRef}\n          onChangeText={\n            ingredients\n              ? (text) => onChange(ingredients, dispatch, text)\n              : (text) => onChange(dispatch, text)\n          }\n        />\n        <Pressable>\n          <Text>X</Text>\n        </Pressable>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7,\n    marginTop: 10,\n  },\n  searchIcon: {\n    marginRight: 10,\n  },\n  searchBar: {\n    backgroundColor: COLORS.white,\n    borderRadius: 7,\n    height: 20,\n    width: \"80%\",\n  },\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}