{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/IngredientsScreen.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport AddIcon from \"../assets/add.js\";\nimport DownArrow from \"../assets/down-chevron.js\";\nimport InvoiceIcon from \"../assets/invoice.js\";\nimport BarCodeIcon from \"../assets/bar-code.js\";\nimport ManuallyIcon from \"../assets/up-sign.js\";\nimport { COLORS } from \"../libs/constants\";\nimport IngredientsList from \"./IngredientsList.js\";\nimport Modal from \"react-native-modal\";\nimport SearchBar from \"./SearchBar.js\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi.js\";\nimport { useSelector } from \"react-redux\";\n\nvar IngredientsScreen = function IngredientsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isShown = _React$useState2[0],\n      setIsShown = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isModalVisible = _React$useState4[0],\n      setIsModalVisible = _React$useState4[1];\n\n  var ingredientsResults = useSelector(function (state) {\n    return state.ingredientsSearch.ingredients;\n  });\n\n  var toggleDropDown = function toggleDropDown() {\n    if (isShown) {\n      setIsShown(!isShown);\n    } else {\n      setIsShown(!isShown);\n    }\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    dropdownContainer: {\n      display: isShown ? \"flex\" : \"none\",\n      marginTop: 30\n    },\n    dropdownButton: {\n      height: 40,\n      backgroundColor: COLORS.white,\n      margin: 5,\n      padding: 10,\n      borderRadius: 7,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    titleContainer: {\n      display: \"flex\",\n      height: 40,\n      marginTop: 30\n    },\n    title: {\n      fontSize: 30,\n      fontWeight: \"800\"\n    },\n    buttonContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: COLORS.lightCoral,\n      borderRadius: 7,\n      width: 100,\n      height: 40,\n      marginTop: 10,\n      marginBottom: 5\n    },\n    modalContainer: {\n      flex: 1,\n      flexDirection: \"column\",\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    modalTitle: {\n      fontSize: 20,\n      fontWeight: \"800\"\n    },\n    ingredientContainer: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    ingredientImage: {\n      height: 10,\n      width: 10\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    isVisible: isModalVisible,\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Search and choose your ingredients below:\"), React.createElement(SearchBar, {\n    searchType: \"ingredientsAPI\",\n    onChangeProp: fetchIngredientsSearchApi,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, ingredientsResults ? ingredientsResults.length !== 0 ? ingredientsResults.map(function (ingredient) {\n    return React.createElement(View, {\n      key: ingredient.food.foodId,\n      style: styles.ingredientContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }, React.createElement(Image, {\n      source: ingredient.image,\n      style: styles.ingredientImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, ingredient.food.label));\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, \"No results\") : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Your results\")), React.createElement(Button, {\n    title: \"x\",\n    onPress: function onPress() {\n      return setIsModalVisible(!isModalVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Hello\"))), React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Ingredients \")), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: toggleDropDown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, isShown ? React.createElement(DownArrow, {\n    width: 20,\n    height: 20,\n    fill: COLORS.white,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }) : React.createElement(AddIcon, {\n    width: 20,\n    height: 20,\n    fill: COLORS.white,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.dropdownContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.dropdownButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, React.createElement(InvoiceIcon, {\n    width: 20,\n    height: 20,\n    fill: COLORS.lightCoral,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Take a photo of your groceries receipt\")), React.createElement(TouchableOpacity, {\n    style: styles.dropdownButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, React.createElement(BarCodeIcon, {\n    width: 20,\n    height: 20,\n    fill: COLORS.lightCoral,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Scan your ingredients barcode\")), React.createElement(TouchableOpacity, {\n    style: styles.dropdownButton,\n    onPress: function onPress() {\n      return setIsModalVisible(!isModalVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, React.createElement(ManuallyIcon, {\n    width: 20,\n    height: 20,\n    fill: COLORS.lightCoral,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Manually enter your ingredients below\"))), React.createElement(IngredientsList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default IngredientsScreen;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/IngredientsScreen.js"],"names":["React","TouchableOpacity","AddIcon","DownArrow","InvoiceIcon","BarCodeIcon","ManuallyIcon","COLORS","IngredientsList","Modal","SearchBar","fetchIngredientsSearchApi","useSelector","IngredientsScreen","navigation","useState","isShown","setIsShown","isModalVisible","setIsModalVisible","ingredientsResults","state","ingredientsSearch","ingredients","toggleDropDown","styles","StyleSheet","create","container","flex","alignItems","dropdownContainer","display","marginTop","dropdownButton","height","backgroundColor","white","margin","padding","borderRadius","justifyContent","titleContainer","title","fontSize","fontWeight","buttonContainer","flexDirection","lightCoral","width","marginBottom","modalContainer","modalTitle","ingredientContainer","ingredientImage","length","map","ingredient","food","foodId","image","label"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, Pressable, Button, Image } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport AddIcon from \"../assets/add.js\";\nimport DownArrow from \"../assets/down-chevron.js\";\nimport InvoiceIcon from \"../assets/invoice.js\";\nimport BarCodeIcon from \"../assets/bar-code.js\";\nimport ManuallyIcon from \"../assets/up-sign.js\";\nimport { COLORS } from \"../libs/constants\";\nimport IngredientsList from \"./IngredientsList.js\";\nimport Modal from \"react-native-modal\";\nimport SearchBar from \"./SearchBar.js\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi.js\";\nimport { useSelector } from \"react-redux\";\n\nconst IngredientsScreen = ({ navigation }) => {\n  const [isShown, setIsShown] = React.useState(false);\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\n  const ingredientsResults = useSelector(\n    (state) => state.ingredientsSearch.ingredients\n  );\n\n  const toggleDropDown = () => {\n    if (isShown) {\n      setIsShown(!isShown);\n    } else {\n      setIsShown(!isShown);\n    }\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n    },\n    dropdownContainer: {\n      display: isShown ? \"flex\" : \"none\",\n      marginTop: 30,\n    },\n    dropdownButton: {\n      height: 40,\n      backgroundColor: COLORS.white,\n      margin: 5,\n      padding: 10,\n      borderRadius: 7,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    titleContainer: {\n      display: \"flex\",\n      height: 40,\n      marginTop: 30,\n    },\n    title: {\n      fontSize: 30,\n      fontWeight: \"800\",\n    },\n    buttonContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: COLORS.lightCoral,\n      borderRadius: 7,\n      width: 100,\n      height: 40,\n      marginTop: 10,\n      marginBottom: 5,\n    },\n    modalContainer: {\n      flex: 1,\n      flexDirection: \"column\",\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    modalTitle: {\n      fontSize: 20,\n      fontWeight: \"800\",\n    },\n    ingredientContainer: {\n      flex: 1,\n      alignItems: \"center\",\n    },\n    ingredientImage: {\n      height: 10,\n      width: 10,\n    },\n  });\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View>\n          <Modal isVisible={isModalVisible} style={styles.modalContainer}>\n            <Text style={styles.modalTitle}>\n              Search and choose your ingredients below:\n            </Text>\n            <SearchBar\n              searchType=\"ingredientsAPI\"\n              onChangeProp={fetchIngredientsSearchApi}\n            />\n            <View>\n              {ingredientsResults ? (\n                ingredientsResults.length !== 0 ? (\n                  ingredientsResults.map((ingredient) => {\n                    return (\n                      <View\n                        key={ingredient.food.foodId}\n                        style={styles.ingredientContainer}\n                      >\n                        <Image\n                          source={ingredient.image}\n                          style={styles.ingredientImage}\n                        />\n                        <Text>{ingredient.food.label}</Text>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <Text>No results</Text>\n                )\n              ) : (\n                <Text>Your results</Text>\n              )}\n            </View>\n            <Button\n              title=\"x\"\n              onPress={() => setIsModalVisible(!isModalVisible)}\n            />\n            <Text>Hello</Text>\n          </Modal>\n        </View>\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>Ingredients </Text>\n        </View>\n        <TouchableOpacity\n          style={styles.buttonContainer}\n          onPress={toggleDropDown}\n        >\n          {isShown ? (\n            <DownArrow width={20} height={20} fill={COLORS.white} />\n          ) : (\n            <AddIcon width={20} height={20} fill={COLORS.white} />\n          )}\n        </TouchableOpacity>\n        <View style={styles.dropdownContainer}>\n          <TouchableOpacity style={styles.dropdownButton}>\n            <InvoiceIcon width={20} height={20} fill={COLORS.lightCoral} />\n            <Text>Take a photo of your groceries receipt</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.dropdownButton}>\n            <BarCodeIcon width={20} height={20} fill={COLORS.lightCoral} />\n            <Text>Scan your ingredients barcode</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.dropdownButton}\n            onPress={() => setIsModalVisible(!isModalVisible)}\n          >\n            <ManuallyIcon width={20} height={20} fill={COLORS.lightCoral} />\n            <Text>Manually enter your ingredients below</Text>\n          </TouchableOpacity>\n        </View>\n        <IngredientsList />\n      </View>\n    </>\n  );\n};\n\nexport default IngredientsScreen;\n"]},"metadata":{},"sourceType":"module"}