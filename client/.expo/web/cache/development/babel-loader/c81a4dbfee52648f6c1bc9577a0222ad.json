{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/SearchBar.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { COLORS } from \"../libs/constants\";\nimport SearchIcon from \"../assets/magnifying-glass.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\n\nvar SearchBar = function SearchBar(_ref) {\n  var ingredients = _ref.ingredients,\n      searchType = _ref.searchType;\n  var dispatch = useDispatch();\n\n  var _useState = useState(function () {}),\n      _useState2 = _slicedToArray(_useState, 2),\n      onChange = _useState2[0],\n      setOnChange = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      placeholder = _useState4[0],\n      setPlaceholder = _useState4[1];\n\n  useEffect(function () {\n    switch (searchType) {\n      case \"ingredientsList\":\n        setOnChange(searchIngredient);\n        setPlaceholder(\"Search your ingredients here\");\n        break;\n\n      case \"ingredientsAPI\":\n        setOnChange(fetchIngredientsSearchApi);\n        setPlaceholder(\"Search any ingredients here\");\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchIcon, {\n    width: 20,\n    height: 20,\n    fill: COLORS.grey,\n    style: styles.searchIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.searchBar,\n    placeholder: \"Search your ingredients here\",\n    onChangeText: function onChangeText(text) {\n      return searchIngredient(ingredients, dispatch, text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7,\n    marginTop: 10\n  },\n  searchIcon: {\n    marginRight: 10\n  },\n  searchBar: {\n    backgroundColor: COLORS.white,\n    borderRadius: 7,\n    height: 20,\n    width: \"80%\"\n  }\n});\nexport default SearchBar;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/SearchBar.js"],"names":["React","useEffect","useState","TextInput","COLORS","SearchIcon","useDispatch","useSelector","searchIngredient","fetchIngredientsSearchApi","SearchBar","ingredients","searchType","dispatch","onChange","setOnChange","placeholder","setPlaceholder","styles","container","grey","searchIcon","searchBar","text","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","backgroundColor","white","padding","borderRadius","marginTop","marginRight","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,MAAT;AACA,OAAOC,UAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,gBAAP;AACA,OAAOC,yBAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiC;AAAA,MAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACjD,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AADiD,kBAEjBJ,QAAQ,CAAC,YAAM,CAAE,CAAT,CAFS;AAAA;AAAA,MAE1CY,QAF0C;AAAA,MAEhCC,WAFgC;;AAAA,mBAGXb,QAAQ,CAAC,EAAD,CAHG;AAAA;AAAA,MAG1Cc,WAH0C;AAAA,MAG7BC,cAH6B;;AAKjDhB,EAAAA,SAAS,CAAC,YAAM;AACd,YAAQW,UAAR;AACE,WAAK,iBAAL;AACEG,QAAAA,WAAW,CAACP,gBAAD,CAAX;AACAS,QAAAA,cAAc,CAAC,8BAAD,CAAd;AACA;;AACF,WAAK,gBAAL;AACEF,QAAAA,WAAW,CAACN,yBAAD,CAAX;AACAQ,QAAAA,cAAc,CAAC,6BAAD,CAAd;AAPJ;AASD,GAVQ,EAUN,EAVM,CAAT;AAWA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,EADT;AAEE,IAAA,MAAM,EAAE,EAFV;AAGE,IAAA,IAAI,EAAEf,MAAM,CAACgB,IAHf;AAIE,IAAA,KAAK,EAAEF,MAAM,CAACG,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACI,SADhB;AAEE,IAAA,WAAW,EAAC,8BAFd;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUf,gBAAgB,CAACG,WAAD,EAAcE,QAAd,EAAwBU,IAAxB,CAA1B;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAiBD,CAjCD;;AAmCA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,eAAe,EAAE1B,MAAM,CAAC2B,KALf;AAMTC,IAAAA,OAAO,EAAE,EANA;AAOTC,IAAAA,YAAY,EAAE,CAPL;AAQTC,IAAAA,SAAS,EAAE;AARF,GADoB;AAW/Bb,EAAAA,UAAU,EAAE;AACVc,IAAAA,WAAW,EAAE;AADH,GAXmB;AAc/Bb,EAAAA,SAAS,EAAE;AACTQ,IAAAA,eAAe,EAAE1B,MAAM,CAAC2B,KADf;AAETE,IAAAA,YAAY,EAAE,CAFL;AAGTG,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,KAAK,EAAE;AAJE;AAdoB,CAAlB,CAAf;AAsBA,eAAe3B,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { COLORS } from \"../libs/constants\";\nimport SearchIcon from \"../assets/magnifying-glass.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\n\nconst SearchBar = ({ ingredients, searchType }) => {\n  const dispatch = useDispatch();\n  const [onChange, setOnChange] = useState(() => {});\n  const [placeholder, setPlaceholder] = useState(\"\");\n\n  useEffect(() => {\n    switch (searchType) {\n      case \"ingredientsList\":\n        setOnChange(searchIngredient);\n        setPlaceholder(\"Search your ingredients here\");\n        break;\n      case \"ingredientsAPI\":\n        setOnChange(fetchIngredientsSearchApi);\n        setPlaceholder(\"Search any ingredients here\");\n    }\n  }, []);\n  return (\n    <>\n      <View style={styles.container}>\n        <SearchIcon\n          width={20}\n          height={20}\n          fill={COLORS.grey}\n          style={styles.searchIcon}\n        />\n        <TextInput\n          style={styles.searchBar}\n          placeholder=\"Search your ingredients here\"\n          onChangeText={(text) => searchIngredient(ingredients, dispatch, text)}\n        />\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7,\n    marginTop: 10,\n  },\n  searchIcon: {\n    marginRight: 10,\n  },\n  searchBar: {\n    backgroundColor: COLORS.white,\n    borderRadius: 7,\n    height: 20,\n    width: \"80%\",\n  },\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}