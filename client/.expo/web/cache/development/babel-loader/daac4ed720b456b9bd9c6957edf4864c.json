{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/SearchBar.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { COLORS } from \"../libs/constants\";\nimport SearchIcon from \"../assets/magnifying-glass.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\n\nvar SearchBar = function SearchBar(_ref) {\n  var ingredients = _ref.ingredients,\n      searchType = _ref.searchType,\n      onChangeProp = _ref.onChangeProp;\n  var dispatch = useDispatch();\n\n  var _useState = useState(function () {}),\n      _useState2 = _slicedToArray(_useState, 2),\n      onChange = _useState2[0],\n      setOnChange = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      placeholder = _useState4[0],\n      setPlaceholder = _useState4[1];\n\n  useEffect(function () {\n    if (searchType === \"ingredientsList\") {\n      setPlaceholder(\"Search your ingredients here:\");\n    } else if (searchType === \"ingredientsAPI\") {\n      setPlaceholder(\"Search any ingredients to add here\");\n    } else {\n      setPlaceholder(\"\");\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchIcon, {\n    width: 20,\n    height: 20,\n    fill: COLORS.grey,\n    style: styles.searchIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.searchBar,\n    placeholder: placeholder,\n    onChangeText: function onChangeText(text) {\n      return searchIngredient(ingredients, dispatch, text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7,\n    marginTop: 10\n  },\n  searchIcon: {\n    marginRight: 10\n  },\n  searchBar: {\n    backgroundColor: COLORS.white,\n    borderRadius: 7,\n    height: 20,\n    width: \"80%\"\n  }\n});\nexport default SearchBar;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/SearchBar.js"],"names":["React","useEffect","useState","TextInput","COLORS","SearchIcon","useDispatch","useSelector","searchIngredient","fetchIngredientsSearchApi","SearchBar","ingredients","searchType","onChangeProp","dispatch","onChange","setOnChange","placeholder","setPlaceholder","styles","container","grey","searchIcon","searchBar","text","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","backgroundColor","white","padding","borderRadius","marginTop","marginRight","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,MAAT;AACA,OAAOC,UAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,gBAAP;AACA,OAAOC,yBAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA+C;AAAA,MAA5CC,WAA4C,QAA5CA,WAA4C;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC/D,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAD+D,kBAE/BJ,QAAQ,CAAC,YAAM,CAAE,CAAT,CAFuB;AAAA;AAAA,MAExDa,QAFwD;AAAA,MAE9CC,WAF8C;;AAAA,mBAGzBd,QAAQ,CAAC,EAAD,CAHiB;AAAA;AAAA,MAGxDe,WAHwD;AAAA,MAG3CC,cAH2C;;AAK/DjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,UAAU,KAAK,iBAAnB,EAAsC;AACpCM,MAAAA,cAAc,CAAC,+BAAD,CAAd;AACD,KAFD,MAEO,IAAIN,UAAU,KAAK,gBAAnB,EAAqC;AAC1CM,MAAAA,cAAc,CAAC,oCAAD,CAAd;AACD,KAFM,MAEA;AACLA,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GARQ,CAAT;AASA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,EADT;AAEE,IAAA,MAAM,EAAE,EAFV;AAGE,IAAA,IAAI,EAAEhB,MAAM,CAACiB,IAHf;AAIE,IAAA,KAAK,EAAEF,MAAM,CAACG,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACI,SADhB;AAEE,IAAA,WAAW,EAAEN,WAFf;AAGE,IAAA,YAAY,EAAE,sBAACO,IAAD;AAAA,aAAUhB,gBAAgB,CAACG,WAAD,EAAcG,QAAd,EAAwBU,IAAxB,CAA1B;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAiBD,CA/BD;;AAiCA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,eAAe,EAAE3B,MAAM,CAAC4B,KALf;AAMTC,IAAAA,OAAO,EAAE,EANA;AAOTC,IAAAA,YAAY,EAAE,CAPL;AAQTC,IAAAA,SAAS,EAAE;AARF,GADoB;AAW/Bb,EAAAA,UAAU,EAAE;AACVc,IAAAA,WAAW,EAAE;AADH,GAXmB;AAc/Bb,EAAAA,SAAS,EAAE;AACTQ,IAAAA,eAAe,EAAE3B,MAAM,CAAC4B,KADf;AAETE,IAAAA,YAAY,EAAE,CAFL;AAGTG,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,KAAK,EAAE;AAJE;AAdoB,CAAlB,CAAf;AAsBA,eAAe5B,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { COLORS } from \"../libs/constants\";\nimport SearchIcon from \"../assets/magnifying-glass.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\n\nconst SearchBar = ({ ingredients, searchType, onChangeProp }) => {\n  const dispatch = useDispatch();\n  const [onChange, setOnChange] = useState(() => {});\n  const [placeholder, setPlaceholder] = useState(\"\");\n\n  useEffect(() => {\n    if (searchType === \"ingredientsList\") {\n      setPlaceholder(\"Search your ingredients here:\");\n    } else if (searchType === \"ingredientsAPI\") {\n      setPlaceholder(\"Search any ingredients to add here\");\n    } else {\n      setPlaceholder(\"\");\n    }\n  });\n  return (\n    <>\n      <View style={styles.container}>\n        <SearchIcon\n          width={20}\n          height={20}\n          fill={COLORS.grey}\n          style={styles.searchIcon}\n        />\n        <TextInput\n          style={styles.searchBar}\n          placeholder={placeholder}\n          onChangeText={(text) => searchIngredient(ingredients, dispatch, text)}\n        />\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7,\n    marginTop: 10,\n  },\n  searchIcon: {\n    marginRight: 10,\n  },\n  searchBar: {\n    backgroundColor: COLORS.white,\n    borderRadius: 7,\n    height: 20,\n    width: \"80%\",\n  },\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}