{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/components/IngredientsList.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COLORS } from \"../libs/constants\";\nimport ingredients from \"../libs/ingredients.json\";\nimport categories from \"../libs/ingredientsCategories.json\";\nimport SearchBar from \"./SearchBar\";\nimport { receiveIngredients } from \"../libs/redux/actions/IngredientsActions\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\n\nvar IngredientsList = function IngredientsList() {\n  var dispatch = useDispatch();\n  var ingredientsState = useSelector(function (state) {\n    return state.ingredients.ingredients;\n  });\n  var categoriesState = useSelector(function (state) {\n    return state.ingredients.categories;\n  });\n  var searchResult = useSelector(function (state) {\n    return state.search.result;\n  });\n  React.useEffect(function () {\n    dispatch(receiveIngredients({\n      ingredients: ingredients,\n      categories: categories\n    }));\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchBar, {\n    ingredients: ingredientsState,\n    searchType: \"ingredientsList\",\n    onChangeProp: searchIngredient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, !searchResult ? categoriesState.map(function (category) {\n    return React.createElement(View, {\n      style: styles.categoryContainer,\n      key: category.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.hr,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.categoryTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, category.name), ingredientsState.filter(function (el) {\n      return el.category.toLowerCase() === category.name.toLowerCase();\n    }).length !== 0 ? ingredientsState.filter(function (el) {\n      return el.category.toLowerCase() === category.name.toLowerCase();\n    }).map(function (ingredient) {\n      return React.createElement(View, {\n        style: styles.ingredientListItem,\n        key: ingredient.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: styles.ingredientQuantityContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        defaultValue: ingredient.quantity.number,\n        style: styles.ingredientQuantityNumber,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }\n      }), React.createElement(Text, {\n        style: styles.ingredientQuantityUnit,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }\n      }, ingredient.quantity.unit)), React.createElement(Text, {\n        style: styles.ingredientName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, ingredient.name));\n    }) : React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, \"No Ingredients in this category\"));\n  }) : searchResult.length !== 0 ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, searchResult.map(function (ingredient) {\n    return React.createElement(View, {\n      style: styles.ingredientListItem,\n      key: ingredient.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.ingredientQuantityContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, React.createElement(TextInput, {\n      defaultValue: ingredient.quantity.number,\n      style: styles.ingredientQuantityNumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.ingredientQuantityUnit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, ingredient.quantity.unit)), React.createElement(Text, {\n      style: styles.ingredientName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, ingredient.name));\n  })) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"No ingredients found\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\"\n  },\n  listContainer: {\n    marginTop: 20\n  },\n  categoryTitle: {\n    fontSize: 25,\n    fontWeight: \"800\"\n  },\n  categoryContainer: {},\n  hr: {\n    borderBottomColor: COLORS.lightCoral,\n    borderBottomWidth: 1,\n    marginBottom: 20,\n    marginTop: 20\n  },\n  ingredientListItem: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 15,\n    justifyContent: \"space-between\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7\n  },\n  ingredientQuantityContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"50%\"\n  },\n  ingredientQuantityNumber: {\n    marginRight: 5,\n    fontSize: 30,\n    borderBottomWidth: 3,\n    borderBottomColor: COLORS.lightCoral,\n    width: 60,\n    fontWeight: \"800\",\n    color: COLORS.lightCoral\n  },\n  ingredientQuantityUnit: {\n    fontSize: 20,\n    fontStyle: \"italic\",\n    fontWeight: \"500\"\n  },\n  ingredientName: {\n    fontSize: 20,\n    width: \"50%\",\n    textAlign: \"right\"\n  }\n});\nexport default IngredientsList;","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/components/IngredientsList.js"],"names":["React","TextInput","TouchableOpacity","useDispatch","useSelector","COLORS","ingredients","categories","SearchBar","receiveIngredients","fetchIngredientsSearchApi","searchIngredient","IngredientsList","dispatch","ingredientsState","state","categoriesState","searchResult","search","result","useEffect","styles","container","listContainer","map","category","categoryContainer","id","hr","categoryTitle","name","filter","el","toLowerCase","length","ingredient","ingredientListItem","ingredientQuantityContainer","quantity","number","ingredientQuantityNumber","ingredientQuantityUnit","unit","ingredientName","StyleSheet","create","width","marginTop","fontSize","fontWeight","borderBottomColor","lightCoral","borderBottomWidth","marginBottom","flex","flexDirection","alignItems","justifyContent","backgroundColor","white","padding","borderRadius","marginRight","color","fontStyle","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, ScrollView } from \"react-native\";\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COLORS } from \"../libs/constants\";\nimport ingredients from \"../libs/ingredients.json\";\nimport categories from \"../libs/ingredientsCategories.json\";\nimport SearchBar from \"./SearchBar\";\nimport { receiveIngredients } from \"../libs/redux/actions/IngredientsActions\";\nimport fetchIngredientsSearchApi from \"../libs/handlers/fetchIngredientsSearchApi\";\nimport searchIngredient from \"../libs/handlers/searchIngredient\";\n\nconst IngredientsList = () => {\n  const dispatch = useDispatch();\n  const ingredientsState = useSelector(\n    (state) => state.ingredients.ingredients\n  );\n  const categoriesState = useSelector((state) => state.ingredients.categories);\n  const searchResult = useSelector((state) => state.search.result);\n\n  React.useEffect(() => {\n    dispatch(\n      receiveIngredients({ ingredients: ingredients, categories: categories })\n    );\n  }, []);\n\n  return (\n    <>\n      <ScrollView contentContainerStyle={styles.container}>\n        <SearchBar\n          ingredients={ingredientsState}\n          searchType=\"ingredientsList\"\n          onChangeProp={searchIngredient}\n        />\n        <View style={styles.listContainer}>\n          {!searchResult ? (\n            categoriesState.map((category) => (\n              <View style={styles.categoryContainer} key={category.id}>\n                <View style={styles.hr} />\n\n                <Text style={styles.categoryTitle}>{category.name}</Text>\n                {ingredientsState.filter(\n                  (el) =>\n                    el.category.toLowerCase() === category.name.toLowerCase()\n                ).length !== 0 ? (\n                  ingredientsState\n                    .filter(\n                      (el) =>\n                        el.category.toLowerCase() ===\n                        category.name.toLowerCase()\n                    )\n                    .map((ingredient) => (\n                      <View\n                        style={styles.ingredientListItem}\n                        key={ingredient.id}\n                      >\n                        <View style={styles.ingredientQuantityContainer}>\n                          <TextInput\n                            defaultValue={ingredient.quantity.number}\n                            style={styles.ingredientQuantityNumber}\n                          />\n                          <Text style={styles.ingredientQuantityUnit}>\n                            {ingredient.quantity.unit}\n                          </Text>\n                        </View>\n                        <Text style={styles.ingredientName}>\n                          {ingredient.name}\n                        </Text>\n                      </View>\n                    ))\n                ) : (\n                  <Text>No Ingredients in this category</Text>\n                )}\n              </View>\n            ))\n          ) : searchResult.length !== 0 ? (\n            <View>\n              {searchResult.map((ingredient) => (\n                <View style={styles.ingredientListItem} key={ingredient.id}>\n                  <View style={styles.ingredientQuantityContainer}>\n                    <TextInput\n                      defaultValue={ingredient.quantity.number}\n                      style={styles.ingredientQuantityNumber}\n                    />\n                    <Text style={styles.ingredientQuantityUnit}>\n                      {ingredient.quantity.unit}\n                    </Text>\n                  </View>\n                  <Text style={styles.ingredientName}>{ingredient.name}</Text>\n                </View>\n              ))}\n            </View>\n          ) : (\n            <Text>No ingredients found</Text>\n          )}\n        </View>\n      </ScrollView>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n  },\n  listContainer: {\n    marginTop: 20,\n  },\n  categoryTitle: {\n    fontSize: 25,\n    fontWeight: \"800\",\n  },\n  categoryContainer: {\n    // padding: 20,\n  },\n  hr: {\n    borderBottomColor: COLORS.lightCoral,\n    borderBottomWidth: 1,\n    marginBottom: 20,\n    marginTop: 20,\n  },\n  ingredientListItem: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 15,\n    justifyContent: \"space-between\",\n    backgroundColor: COLORS.white,\n    padding: 20,\n    borderRadius: 7,\n  },\n  ingredientQuantityContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"50%\",\n  },\n  ingredientQuantityNumber: {\n    marginRight: 5,\n    fontSize: 30,\n    borderBottomWidth: 3,\n    borderBottomColor: COLORS.lightCoral,\n    width: 60,\n    fontWeight: \"800\",\n    color: COLORS.lightCoral,\n  },\n  ingredientQuantityUnit: {\n    fontSize: 20,\n    fontStyle: \"italic\",\n    fontWeight: \"500\",\n  },\n  ingredientName: {\n    fontSize: 20,\n    width: \"50%\",\n    textAlign: \"right\",\n  },\n});\n\nexport default IngredientsList;\n"]},"metadata":{},"sourceType":"module"}