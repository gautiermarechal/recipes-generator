{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/gautiermarechal/recipes-generator/client/App.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport RecipesBookIcon from \"./assets/recipe-book.js\";\nimport IngredientsIcon from \"./assets/harvest.js\";\nimport RecipesScreen from \"./components/RecipesScreen\";\nimport IngredientsScreen from \"./components/IngredientsScreen\";\nimport { COLORS } from \"./libs/constants\";\nimport configureStore from \"./libs/redux/store\";\nimport { Provider } from \"react-redux\";\nimport SingleRecipe from \"./components/SingleRecipe.js\";\nimport RecipesNavigator from \"./components/RecipesNavigator.js\";\nimport IngredientsNavigator from \"./components/IngredientsNavigator.js\";\nvar store = configureStore();\nvar Tab = createBottomTabNavigator();\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, children);\n};\n\nexport default function App() {\n  var _this2 = this;\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(DismissKeyboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    tabBarOptions: {\n      inactiveTintColor: COLORS.grey,\n      activeTintColor: COLORS.white,\n      activeBackgroundColor: COLORS.lightCoral\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Recipes\",\n    component: RecipesNavigator,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        tabBarLabel: \"Recipes\",\n        tabBarIcon: function tabBarIcon() {\n          return React.createElement(RecipesBookIcon, {\n            width: 30,\n            height: 30,\n            fill: COLORS.white,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Button, {\n            title: \"Account\",\n            onPress: function onPress() {\n              navigation.navigate(\"Account\");\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Ingredients\",\n    component: IngredientsNavigator,\n    options: {\n      tabBarLabel: \"Ingredients\",\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(IngredientsIcon, {\n          height: 30,\n          width: 30,\n          fill: COLORS.black,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.blueWhite,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\"\n  },\n  input: {\n    height: \"20%\",\n    width: \"40%\"\n  },\n  bottomTab: {\n    height: 50,\n    backgroundColor: COLORS.lightCoral\n  }\n});","map":{"version":3,"sources":["/Users/gautiermarechal/recipes-generator/client/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Icon","RecipesBookIcon","IngredientsIcon","RecipesScreen","IngredientsScreen","COLORS","configureStore","Provider","SingleRecipe","RecipesNavigator","IngredientsNavigator","store","Tab","DismissKeyboard","children","Keyboard","dismiss","App","inactiveTintColor","grey","activeTintColor","white","activeBackgroundColor","lightCoral","navigation","tabBarLabel","tabBarIcon","headerRight","navigate","color","black","styles","StyleSheet","create","container","flex","backgroundColor","blueWhite","alignItems","justifyContent","height","input","width","bottomTab"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Button,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from \"react-native\";\n//Navigation Imports\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\n//Icons Imports\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport RecipesBookIcon from \"./assets/recipe-book.js\";\nimport IngredientsIcon from \"./assets/harvest.js\";\n\n//Components Imports\nimport RecipesScreen from \"./components/RecipesScreen\";\nimport IngredientsScreen from \"./components/IngredientsScreen\";\nimport { COLORS } from \"./libs/constants\";\nimport configureStore from \"./libs/redux/store\";\nimport { Provider } from \"react-redux\";\nimport SingleRecipe from \"./components/SingleRecipe.js\";\nimport RecipesNavigator from \"./components/RecipesNavigator.js\";\nimport IngredientsNavigator from \"./components/IngredientsNavigator.js\";\n\n//Redux store\nconst store = configureStore();\n\n//Main Navigation Components\nconst Tab = createBottomTabNavigator();\n\n//Dismiss keyboard component\nconst DismissKeyboard = ({ children }) => (\n  <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n    {children}\n  </TouchableWithoutFeedback>\n);\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <DismissKeyboard>\n        <NavigationContainer>\n          <Tab.Navigator\n            initialRouteName=\"Home\"\n            tabBarOptions={{\n              inactiveTintColor: COLORS.grey,\n              activeTintColor: COLORS.white,\n              activeBackgroundColor: COLORS.lightCoral,\n            }}\n          >\n            <Tab.Screen\n              name=\"Recipes\"\n              component={RecipesNavigator}\n              options={({ navigation }) => ({\n                tabBarLabel: \"Recipes\",\n                tabBarIcon: () => (\n                  <RecipesBookIcon width={30} height={30} fill={COLORS.white} />\n                ),\n                headerRight: () => {\n                  return (\n                    <Button\n                      title=\"Account\"\n                      onPress={() => {\n                        navigation.navigate(\"Account\");\n                      }}\n                    />\n                  );\n                },\n              })}\n            />\n            <Tab.Screen\n              name=\"Ingredients\"\n              component={IngredientsNavigator}\n              options={{\n                tabBarLabel: \"Ingredients\",\n                tabBarIcon: ({ color }) => (\n                  <IngredientsIcon height={30} width={30} fill={COLORS.black} />\n                ),\n              }}\n            />\n          </Tab.Navigator>\n        </NavigationContainer>\n      </DismissKeyboard>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.blueWhite,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n  },\n  input: {\n    height: \"20%\",\n    width: \"40%\",\n  },\n  bottomTab: {\n    height: 50,\n    backgroundColor: COLORS.lightCoral,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}